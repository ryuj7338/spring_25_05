<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.demo.repository.ArticleRepository">

	<insert id="writeArticle" parameterType="map">
		INSERT INTO article
		SET
		regDate = NOW(),
		updateDate = NOW(),
		memberId = #{memberId},
		boardId =
		#{boardId},
		title = #{title},
		`body` = #{body}
	</insert>


	<delete id="deleteArticle" parameterType="int">
		DELETE FROM article
		WHERE id = #{id}
	</delete>

	<update id="modifyArticle" parameterType="map">
		UPDATE article
		<set>
			<if test="title != null and title != ''">title = #{title},</if>
			<if test="body != null and body != ''">`body` = #{body},</if>
			updateDate = NOW()
		</set>
		WHERE id = #{id}
	</update>

	<select id="getArticleHitCount" parameterType="int">
		SELECT hit
		FROM
		article
		WHERE id = #{id}
	</select>

	<update id="increaseHitCount" parameterType="int">
		UPDATE `article`
		SET
		hit = hit + 1
		WHERE id = #{id}
	</update>


	<update id="increaseLikeReaction" parameterType="int">
		UPDATE article
		SET `like` = `like` + 1
		WHERE id = #{relId}
	</update>

	<update id="increaseDislikeReaction" parameterType="int">
		UPDATE
		article
		SET dislike = dislike + 1
		WHERE id = #{relId}
	</update>

	<update id="decreaseLikeReaction" parameterType="int">
		UPDATE article
		SET `like` = `like` - 1
		WHERE id = #{relId}
	</update>

	<update id="decreaseDislikeReaction" parameterType="int">
		UPDATE
		article
		SET dislike = dislike - 1
		WHERE id = #{relId}
	</update>


	<select id="getArticleCount" parameterType="int">
		SELECT COUNT(*) as cnt
		FROM article
		WHERE 1
		<if test="boardId != 0">
			AND boardId = #{boardId}
		</if>
		<if test="searchKeyword != ''">
			<choose>
				<when test="searchType == 'title'">
					AND title LIKE CONCAT('%', #{searchKeyword}, '%')
				</when>
				<when test="searchType == 'body'">
					AND `body` LIKE CONCAT('%', #{searchKeyword}, '%')
				</when>
				<otherwise>
					AND title LIKE CONCAT('%', #{searchKeyword}, '%')
					OR
					`body` LIKE CONCAT('%', #{searchKeyword}, '%')
				</otherwise>

			</choose>
		</if>
	</select>

	<select id="getForArticles"
		resultType="com.example.demo.vo.Article">
		SELECT A.*, M.nickname AS extra__writer
		FROM article A
		INNER JOIN
		`member` M
		ON A.memberId = M.id
		WHERE 1
		<if test="boardId != 0">
			AND A.boardId = #{boardId}
		</if>
		<if test="searchKeyword != '' and searchKeyword != null">
			<choose>
				<when test="searchType == 'title'">
					AND A.title LIKE CONCAT('%', #{searchKeyword}, '%')
				</when>
				<when test="searchType == 'body'">
					AND A.`body` LIKE CONCAT('%', #{searchKeyword}, '%')
				</when>
				<when test="searchType == 'nickname'">
					AND M.nickname LIKE CONCAT('%',
					#{searchKeyword},'%')
				</when>
				<otherwise>
					AND
					A.title LIKE CONCAT('%', #{searchKeyword}, '%')
					OR
					A.`body` LIKE CONCAT('%',#{searchKeyword}, '%')
					OR M.nickname LIKE
					CONCAT('%', #{searchKeyword}, '%')

				</otherwise>

			</choose>
		</if>
		GROUP BY A.id
		ORDER BY A.id DESC
		LIMIT #{limitFrom}, #{limitTake}
	</select>

	<select id="getLastInsertId" parameterType="int">
		SELECT
		LAST_INSERT_ID()
	</select>

	<select id="getForPrintArticle" parameterType="int"
		resultType="com.example.demo.vo.Article">
		SELECT A.*, M.nickname AS extra__writer
		FROM article A
		INNER
		JOIN `member` M
		ON A.memberId = M.id
		WHERE A.id = #{id};
	</select>

	<select id="getArticleId" parameterType="int"
		resultType="com.example.demo.vo.Article">
		SELECT *
		FROM article
		WHERE id = #{id}
	</select>


	<select id="getArticles"
		resultType="com.example.demo.vo.Article">
		SELECT A.*, M.nickname AS extra__writer
		FROM article AS A
		INNER JOIN `member` AS M
		ON A.memberId = M.id
		ORDER BY A.id
		DESC
	</select>

</mapper>